{"version":3,"sources":["components/Loading.js","constants/index.js","api/index.js","context/index.js","components/Modal.js","components/QuizForm.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","role","style","height","TABLE","sports","history","fetchQuestions","url","setError","a","axios","get","data","console","log","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","amount","category","difficulty","quiz","setQuiz","isModalOpen","setIsModalOpen","handleData","questionsData","results","length","handleNextQuestion","oldIndex","openModal","Provider","value","checkAnswer","oldState","closeModal","handleChange","e","target","name","handleSubmit","preventDefault","getUrl","useGlobalContext","useContext","Modal","toFixed","width","onClick","QuizForm","marginBottom","for","type","onChange","min","max","id","App","question","incorrect_answers","correct_answer","answers","tempIndex","Math","floor","random","push","map","answer","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63cf5c2e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"text-center spinner\">\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span style={{ height: \"400px\" }} className=\"visually-hidden\">\r\n          Loading...\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","export const API_ENDPOINT = \"https://opentdb.com/api.php?\";\r\n\r\nexport const TABLE = {\r\n  sports: 21,\r\n  history: 23,\r\n};\r\n","import axios from \"axios\";\r\nimport { API_ENDPOINT, TABLE } from \"../constants/index\";\r\n\r\nexport const getUrl = ({ amount, category, difficulty }) => {\r\n  return `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${TABLE[category]}&type=multiple`;\r\n};\r\n\r\nexport const fetchQuestions = async (url, setError) => {\r\n  try {\r\n    const { data } = await axios.get(url);\r\n    return data;\r\n  } catch (error) {\r\n    setError(true);\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { fetchQuestions, getUrl } from \"../api/index\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [waiting, setWaiting] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [error, setError] = useState(false);\r\n  const [quiz, setQuiz] = useState({\r\n    amount: 10,\r\n    category: \"sports\",\r\n    difficulty: \"easy\",\r\n  });\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleData = async (url) => {\r\n    setLoading(true);\r\n    setWaiting(false);\r\n    const questionsData = await fetchQuestions(url, setError);\r\n    if (!questionsData) return;\r\n    const data = questionsData?.results;\r\n    if (!data?.length) return;\r\n    setQuestions(data);\r\n    setLoading(false);\r\n    setWaiting(false);\r\n  };\r\n  const handleNextQuestion = () => {\r\n    setIndex((oldIndex) => {\r\n      const index = oldIndex + 1;\r\n      if (index > questions.length - 1) {\r\n        openModal();\r\n        return 0;\r\n      } else {\r\n        return index;\r\n      }\r\n    });\r\n  };\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const checkAnswer = (value) => {\r\n    if (value) {\r\n      setCorrect((oldState) => oldState + 1);\r\n    }\r\n    handleNextQuestion();\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setWaiting(true);\r\n    setCorrect(0);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setQuiz({ ...quiz, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const url = getUrl(quiz);\r\n    handleData(url);\r\n  };\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        waiting,\r\n        loading,\r\n        questions,\r\n        index,\r\n        correct,\r\n        error,\r\n        isModalOpen,\r\n        handleNextQuestion,\r\n        checkAnswer,\r\n        closeModal,\r\n        quiz,\r\n        handleChange,\r\n        handleSubmit,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../context/index\";\r\n\r\nconst Modal = () => {\r\n  const { isModalOpen, closeModal, correct, questions } = useGlobalContext();\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        isModalOpen ? \"modal-container isOpen\" : \"modal-container\"\r\n      }`}\r\n    >\r\n      <div className=\"modal-content\">\r\n        <h2>Congrats!</h2>\r\n        <p>\r\n          You Answered {((correct / questions.length) * 100).toFixed(0)}% of questions\r\n          correctly\r\n        </p>\r\n        <button\r\n          className=\"btn btn-success close-btn\"\r\n          style={{ width: \"50%\" }}\r\n          onClick={closeModal}\r\n        >\r\n          Play Again\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../context/index\";\r\n\r\nconst QuizForm = () => {\r\n  const { quiz, handleChange, handleSubmit, error } = useGlobalContext();\r\n  return (\r\n    <section className=\"quiz quiz-small\">\r\n      <form>\r\n        <h2 style={{ marginBottom: \"2rem\" }}>Quiz App</h2>\r\n        <div className=\"mb-3\">\r\n          <label for=\"noOfQuestion\" className=\"form-label\">\r\n            Number of Questions\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            className=\"form-control\"\r\n            value={quiz.amount}\r\n            onChange={handleChange}\r\n            min={1}\r\n            max={50}\r\n            style={{ width: \"400px\" }}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label for=\"category\" className=\"form-label\">\r\n            Categories\r\n          </label>\r\n          <select\r\n            className=\"form-select\"\r\n            name=\"category\"\r\n            id=\"category\"\r\n            value={quiz.category}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"sports\">Sports</option>\r\n            <option value=\"history\">History</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label for=\"difficulty\" className=\"form-label\">\r\n            Level\r\n          </label>\r\n          <select\r\n            className=\"form-select\"\r\n            name=\"difficulty\"\r\n            id=\"difficulty\"\r\n            value={quiz.difficulty}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"easy\">Easy</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"hard\">Hard</option>\r\n          </select>\r\n        </div>\r\n        {error && (\r\n          <p className=\"error\">\r\n            Can't find questions, please try other options\r\n          </p>\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          onClick={handleSubmit}\r\n          className=\"btn btn-success start-btn \"\r\n        >\r\n          Get Started Quiz\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default QuizForm;\r\n","import React from \"react\";\r\nimport Loading from \"./components/Loading\";\r\nimport Modal from \"./components/Modal\";\r\nimport QuizForm from \"./components/QuizForm\";\r\nimport { useGlobalContext } from \"./context/index\";\r\n\r\nconst App = () => {\r\n  const { waiting, loading, questions, index, correct, checkAnswer } =\r\n    useGlobalContext();\r\n\r\n  if (waiting) {\r\n    return <QuizForm />;\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  const { question, incorrect_answers, correct_answer } = questions[index];\r\n  let answers = [...incorrect_answers];\r\n  const tempIndex = Math.floor(Math.random() * 4);\r\n  if (tempIndex === 3) {\r\n    answers.push(correct_answer);\r\n  } else {\r\n    answers.push(answers[tempIndex]);\r\n    answers[tempIndex] = correct_answer;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <Modal />\r\n      <section className=\"quiz\">\r\n        <p>\r\n          Correct Answer: {correct}/{index}\r\n        </p>\r\n        <article className=\"container\">\r\n          <h2>{question}</h2>\r\n          <div>\r\n            {answers.map((answer, index) => {\r\n              return (\r\n                <>\r\n                  <button\r\n                    key={index}\r\n                    style={{ width: \"60%\", textAlign: \"center\" }}\r\n                    className=\"btn btn-secondary answer-btn\"\r\n                    onClick={() => checkAnswer(correct_answer === answer)}\r\n                  >\r\n                    {answer}\r\n                  </button>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </article>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AppProvider } from './context/index';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n     <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}